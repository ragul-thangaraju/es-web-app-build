{"version":3,"sources":["actions/types.js","reducers/loginInReducer.js","reducers/index.js","config/index.js","utils/Utility.js","config/routes.js","utils/Validations.js","utils/AxiosInstance.js","actions/loginInAction.js","components/common/FbButton.js","components/auth/Login.js","components/common/Redirect.js","components/dashboard/Wrapper.js","components/dashboard/index.js","components/App.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","INITIAL_STATE","currentUser","combineReducers","state","action","type","payload","apiBaseUrl","oAuthBaseUrl","isDevelopment","window","location","hostname","userSessionTimer","IS_DEVELOPMENT","API_BASE_URL","OAUTH_BASE_URL","API_ENDPOINT","sessionTime","myLog","console","log","isLoggedIn","store","get","scheduleTokenRenewal","logout","clearAll","clearInterval","href","setInterval","sessionTimeRenewal","document","addEventListener","PATH","isEmptyString","value","undefined","trim","axiosPrivateInstance","axios","create","baseURL","axiosCommonInstance","interceptors","request","use","config","originalRequest","userSession","Client","isTokenExpired","refresh_token","then","response","set","expires_in","tokenExpires","token_type","access_token","catch","err","Promise","reject","a","error","status","token_response","headers","resolve","isAccessToken","date","Date","offset","getTimezoneOffset","Authorization","expiryTime","now","username","password","success","failed","url","method","auth","data","callAPI","params","httpHeader","isPrivate","authenticate","email","callback","dispatch","post","device","code","moment","add","toDate","FB_ID","FB_VERSION","FB_SCOPE","FB_REDIRECT_URL","encodeURIComponent","FB_STATE","FacebookLoginButton","buildUrlFb","popupWindow","windowName","win","w","h","y","top","outerHeight","screenY","x","outerWidth","screenX","open","openFbDialog","uri","fbWindow","timer","closed","URL","documentURI","myFbLogin","token","onClick","Component","regexp","Login","props","componentDidMount","history","push","handleChange","event","setState","target","name","onClickLogin","showLoginError","test","hasError","showLoading","result","showPassword","this","className","placeholder","onChange","e","onKeyPress","key","disabled","connect","RedirectAfterFBSignIn","close","Wrapper","children","Dashboard","onClickLogout","PrivateRoute","component","rest","render","to","App","Fragment","StrictMode","path","exact","Boolean","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","querySelector","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cf608411.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SET_AUTH_TOKENS: \"SET_AUTH_TOKENS\",\n};\n","import { ACTION_TYPES } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  currentUser: {},\n};\n\n/**\n * To store authenticated current user data in redux store\n * @param {Object} state\n * @param {Object} action\n */\nexport const currentUser = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SET_AUTH_TOKENS:\n      return {\n        ...state,\n        currentUser: { ...action.payload },\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { currentUser } from \"./loginInReducer\";\n\n/**\n * Combining all objects to redux store\n */\nexport default combineReducers({\n  currentUser,\n});\n","let apiBaseUrl = \"\";\nlet oAuthBaseUrl = \"\";\nlet isDevelopment = true;\n\nif (window.location.hostname === \"localhost\") {\n  apiBaseUrl = `https://devapi.embassysocial.io/v1`;\n  oAuthBaseUrl = \"\";\n  isDevelopment = true;\n} else if (window.location.hostname === \"\") {\n  apiBaseUrl = ``;\n  oAuthBaseUrl = \"\";\n  isDevelopment = false;\n} else {\n  apiBaseUrl = ``;\n  oAuthBaseUrl = \"\";\n  isDevelopment = false;\n}\n\nexport const IS_DEVELOPMENT = isDevelopment;\nexport const API_BASE_URL = apiBaseUrl;\nexport const OAUTH_BASE_URL = oAuthBaseUrl;\n\n/**\n * REST API endpoints\n */\nexport const API_ENDPOINT = {\n  LOGIN: \"/auth/authToken\",\n};\n","import store from \"store\";\n\nimport { IS_DEVELOPMENT } from \"../config/index\";\n\nexport let userSessionTimer;\nlet sessionTime = 0;\n\nexport function myLog(...message) {\n  if (IS_DEVELOPMENT) {\n    console.log(...message);\n  }\n}\n\nexport const isLoggedIn = () => {\n  if (typeof store.get(\"userSession\") === \"object\") {\n    if (!userSessionTimer) {\n      scheduleTokenRenewal();\n    }\n    return true;\n  }\n  /**\n   * if userSession object is not present return false\n   **/\n  return false;\n};\n\nexport const logout = () => {\n  store.clearAll();\n  clearInterval(userSessionTimer);\n  window.location.href = \"/\";\n};\n\n/**\n * logout user when user is not active for 20 mins\n **/\nexport const scheduleTokenRenewal = () => {\n  sessionTime = 0;\n  userSessionTimer = setInterval(() => {\n    sessionTime++;\n    if (sessionTime > 2400) {\n      // alert(\"Session timeout\");\n      logout();\n    }\n  }, 1000);\n};\n\nconst sessionTimeRenewal = () => {\n  sessionTime = 0;\n};\n\nfunction keyDownTextField() {\n  if (isLoggedIn()) {\n    sessionTimeRenewal();\n  }\n}\n\nfunction keyDownEvent() {\n  if (isLoggedIn()) {\n    sessionTimeRenewal();\n  }\n}\n\nfunction mouseMoveEvent() {\n  if (isLoggedIn()) {\n    sessionTimeRenewal();\n  }\n}\n\n// Listen to user keypress and reset timer\ndocument.addEventListener(\"keypress\", keyDownTextField, false);\n\n// Listen to user keypress and reset timer\ndocument.addEventListener(\"keydown\", keyDownEvent, false);\n\n// Listen to user keypress and reset timer\ndocument.addEventListener(\"mousemove\", mouseMoveEvent, false);\n\nwindow.addEventListener(\"offline\", () => {\n  myLog(\"App is offline\");\n});\n\nwindow.addEventListener(\"online\", () => {\n  myLog(\"App is online\");\n});\n","export const PATH = {\n  LOGIN: \"/login\",\n  REDIRECT: \"/redirect\",\n  INDEX_PAGE: \"/\",\n};\n","export const isEmptyObject = (object) => {\n  return (\n    object === undefined || object === null || Object.keys(object).length === 0\n  );\n};\n\nexport const isEmptyArray = (value) => {\n  return value === undefined || value === null || value.length === 0;\n};\n\nexport const isEmptyString = (value) => {\n  return value === undefined || value === null || value.trim() === \"\";\n};\n\nexport const isString = (value) => {\n  return value !== undefined && value !== null && typeof value === \"string\";\n};\n\nexport const isObject = (value) => {\n  return value !== undefined && value !== null && typeof value === \"object\";\n};\nexport const isSpecialCharacter = (value) => {\n  return value !== undefined && value !== null && value.match(/[^A-Za-z0-9]+/g);\n};\n\nexport const isEmailSpecialChar = (value) => {\n  return (\n    value !== undefined &&\n    value !== null &&\n    value.match(/[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}/gim)\n  );\n};\n\nexport const isValidNumberDot = (value) => {\n  return (\n    value !== undefined && value !== null && value.match(/^\\d+(\\.\\d+){0,2}$/)\n  );\n};\n\nexport const isValdAlpNumSpcUdscrHyph = (value) => {\n  return (\n    value !== undefined && value !== null && value.match(/^\\w+([\\s-_]\\w+)*$/)\n  );\n};\n\nexport const isValdNumber = (value) => {\n  return value !== undefined && value !== null && /^[0-9\\b]+$/.test(value);\n};\n","import axios from \"axios\";\nimport store from \"store\";\n\nimport { API_BASE_URL, OAUTH_BASE_URL } from \"../config/index\";\nimport { myLog, logout } from \"./Utility\";\n\nexport const axiosPrivateInstance = axios.create({\n  baseURL: API_BASE_URL,\n});\n\nexport const axiosCommonInstance = axios.create({\n  baseURL: API_BASE_URL,\n});\n\naxiosCommonInstance.interceptors.request.use(\n  function (config) {\n    let originalRequest = config;\n    let userSession = store.get(\"userSession\");\n    if (Client.isTokenExpired()) {\n      myLog(\"access token expires in 10 secs && refresh token called\");\n      return Client.refresh_token(userSession.refresh_token)\n        .then((response) => {\n          store.set(\"userSession\", response);\n          if (response && response.refresh_token && response.expires_in) {\n            store.set(\"expiryTime\", Client.tokenExpires(response.expires_in));\n          }\n          originalRequest[\"Authorization\"] =\n            response.token_type + \" \" + response.access_token;\n          return originalRequest;\n        })\n        .catch((err) => {\n          myLog(\"Refresh Token Error\", err);\n          logout();\n        });\n    }\n    return config;\n  },\n  function (err) {\n    return Promise.reject(err);\n  }\n);\n\naxiosCommonInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async function (error) {\n    if (error.response.status === 401) {\n      myLog(\"Access token expired && calling refresh token ...\");\n      let userSession = store.get(\"userSession\");\n      return Client.refresh_token(userSession.refresh_token)\n        .then((token_response) => {\n          store.set(\"userSession\", token_response);\n          if (\n            token_response &&\n            token_response.refresh_token &&\n            token_response.expires_in\n          ) {\n            store.set(\n              \"expiryTime\",\n              Client.tokenExpires(token_response.expires_in)\n            );\n          }\n          error.config.headers[\"Authorization\"] =\n            token_response.token_type + \" \" + token_response.access_token;\n          return Promise.resolve(axiosCommonInstance(error.config));\n        })\n        .catch((err) => {\n          myLog(\"Refresh Token Error\", err);\n          logout();\n        });\n    }\n    return Promise.reject(error.response);\n  }\n);\n\nexport default class Client {\n  static httpHeader(isAccessToken) {\n    let date = new Date();\n    let headers = {};\n    headers = {\n      \"Content-Type\": \"application/json\",\n      offset: date.getTimezoneOffset(),\n    };\n    if (isAccessToken) {\n      headers = {\n        \"Content-Type\": \"application/json\",\n        offset: date.getTimezoneOffset(),\n        Authorization:\n          typeof store.get(\"userSession\") === \"object\"\n            ? `${store.get(\"userSession\").token_type} ${\n                store.get(\"userSession\").access_token\n              }`\n            : \"\",\n      };\n    }\n    return headers;\n  }\n\n  static isTokenExpired() {\n    let expiryTime = store.get(\"expiryTime\");\n    if (Date.now() > expiryTime - 120 * 1000 || Date.now() > expiryTime) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  static tokenExpires(tokenExpires) {\n    let minutes = Date.now() + tokenExpires * 1000;\n    return minutes;\n  }\n\n  static OAUTH(username, password) {\n    return new Promise(function (success, failed) {\n      const config = {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        url: OAUTH_BASE_URL,\n        method: \"POST\",\n        auth: {\n          username: \"web_app\",\n          password: \"changeit\",\n        },\n        data: `grant_type=password&scope=openid&username=${username}&password=${password}`,\n      };\n      myLog(\"GET ::::::: INPUT\", config);\n      Client.callAPI(config, success, failed, true);\n    });\n  }\n\n  static callAPI = (config, success, failed, isPrivate) => {\n    const instance = isPrivate ? axiosPrivateInstance : axiosCommonInstance;\n    instance(config)\n      .then((response) => {\n        myLog(\"GET ::::::: response\", response);\n        success(response.data);\n      })\n      .catch((err) => {\n        myLog(\"GET ::::::: err\", err);\n        failed(err.data);\n      });\n  };\n\n  static get(url, params, isAccessToken) {\n    return new Promise(function (success, failed) {\n      const config = {\n        method: \"GET\",\n        url,\n        params,\n        headers: Client.httpHeader(isAccessToken),\n      };\n      myLog(\"GET ::::::: INPUT\", config);\n      Client.callAPI(config, success, failed, false);\n    });\n  }\n\n  static post(url, data, isAccessToken) {\n    return new Promise(function (success, failed) {\n      const config = {\n        method: \"POST\",\n        url,\n        data,\n        headers: Client.httpHeader(isAccessToken),\n      };\n      myLog(\"POST ::::: Input\", config);\n      Client.callAPI(config, success, failed, false);\n    });\n  }\n\n  static put(url, data, isAccessToken) {\n    return new Promise(function (success, failed) {\n      const config = {\n        method: \"PUT\",\n        url,\n        data,\n        headers: Client.httpHeader(isAccessToken),\n      };\n      myLog(\"PUT ::::::: INPUT\", config);\n      Client.callAPI(config, success, failed, false);\n    });\n  }\n\n  static delete(url, params, isAccessToken) {\n    return new Promise(function (success, failed) {\n      const config = {\n        method: \"DELETE\",\n        url,\n        params,\n        headers: Client.httpHeader(isAccessToken),\n      };\n      myLog(\"DELETE ::::::: INPUT\", config);\n      Client.callAPI(config, success, failed, false);\n    });\n  }\n\n  static refresh_token(refresh_token) {\n    return new Promise(function (success, failed) {\n      const config = {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        url: OAUTH_BASE_URL,\n        method: \"POST\",\n        auth: {\n          username: \"web_app\",\n          password: \"changeit\",\n        },\n        data: `grant_type=refresh_token&refresh_token=${refresh_token}&scope=openid`,\n      };\n      Client.callAPI(config, success, failed, true);\n    });\n  }\n}\n","import { API_ENDPOINT } from \"../config\";\nimport Client from \"../utils/AxiosInstance\";\nimport { myLog } from \"../utils/Utility\";\nimport { ACTION_TYPES } from \"./types\";\nimport store from \"store\";\nimport moment from \"moment\";\n\n/**\n * Authenticate user using email/username and password\n * @param {String} username\n * @param {String} password\n * @param {Function} callback\n */\nexport const authenticate = (email, password, callback) => {\n  return async (dispatch) => {\n    try {\n      const response = await Client.post(API_ENDPOINT.LOGIN, {\n        email,\n        password,\n        device: {},\n      });\n      myLog(response, \"---login response----\");\n      if (response.code === 0) {\n        myLog(\"success\", \"---login response----\");\n        /**\n         * Dispatch authenticated user data to reducer\n         */\n        dispatch({\n          type: ACTION_TYPES.SET_AUTH_TOKENS,\n          payload: response.data,\n        });\n        store.set(\"userSession\", response);\n        store.set(\"sessionTill\", moment().add(20, \"m\").toDate());\n        callback(true);\n      } else {\n        callback(false);\n      }\n    } catch (error) {\n      myLog(error, \"--Login error--\");\n      callback(false);\n    }\n  };\n};\n","import \"regenerator-runtime/runtime\";\nimport React, { Component } from \"react\";\n\nconst FB_ID = \"297983414833872\";\nconst FB_VERSION = \"v10.0\";\nconst FB_SCOPE =\n  \"pages_show_list,pages_read_engagement,instagram_basic,instagram_manage_insights\";\nconst FB_REDIRECT_URL = encodeURIComponent(\"https://web.embassysocial.io/redirect\");\nconst FB_STATE = \"fbloged=1\";\n\nclass FacebookLoginButton extends Component {\n  buildUrlFb = () => {\n    return `https://www.facebook.com/${FB_VERSION}/dialog/oauth?client_id=${FB_ID}&redirect_uri=${FB_REDIRECT_URL}&scope=${FB_SCOPE}&state=${FB_STATE}&response_type=code`;\n  };\n\n  popupWindow = (url, windowName, win, w, h) => {\n    const y = win.top.outerHeight / 2 + win.top.screenY - h / 2;\n    const x = win.top.outerWidth / 2 + win.top.screenX - w / 2;\n    return win.open(\n      url,\n      windowName,\n      `toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=no,copyhistory=no,width=${w},height=${h},top=${y},left=${x}`\n    );\n  };\n\n  openFbDialog = async () => {\n    // return new Promise(async (resolve, reject) => {\n      let uri = this.buildUrlFb();\n      let fbWindow = await this.popupWindow(uri, \"\", window, 1000, 600);\n\n      console.log(fbWindow, 'fbWindow')\n      var timer = setInterval(async function () {\n        if (fbWindow.closed) {\n          clearInterval(timer);\n        //   try {\n            console.log(fbWindow.document, 'fbWindow.document')\n            console.log(fbWindow.document.URL, 'fbWindow.document.URL')\n            console.log(fbWindow.document.documentURI, 'fbWindow.document.documentURI')\n            // var url = new URL(fbWindow.document.documentURI);\n            // console.log(url)\n            // let token = url.searchParams.get(\"code\");\n            // console.log(token)\n          //   if(!token) {\n          //     reject(null)\n          //   }\n          //   resolve(token);\n          // } catch (ex) {\n          //   reject(null);\n          // }\n        }\n      }, 1000);\n    // });\n  };\n\n  myFbLogin = async () => {\n    try {\n      let token = await this.openFbDialog();\n      console.log(token);\n    } catch (ex) {\n      console.log(\"there was an error\");\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <button\n          onClick={() => {\n            this.myFbLogin();\n          }}\n        >\n          Login with Fb manually\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default FacebookLoginButton;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { PATH } from \"../../config/routes\";\nimport { isEmptyString } from \"../../utils/Validations\";\nimport { isLoggedIn } from \"../../utils/Utility\";\nimport { authenticate } from \"../../actions/loginInAction\";\nimport FacebookButton from \"../common/FbButton\";\n\nconst regexp = /^\\S*$/;\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      showLoading: false,\n      hasError: false,\n      showLoginError: false,\n      showPassword: false,\n    };\n  }\n\n  componentDidMount = () => {\n    if (isLoggedIn()) {\n      this.props.history.push(PATH.INDEX_PAGE);\n    }\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value.trim(\"\") });\n  };\n  /**\n   * Handles onSubmit Login Form\n   */\n  onClickLogin = () => {\n    const { email, password } = this.state;\n    this.setState({ showLoginError: false });\n    if (\n      isEmptyString(email) ||\n      isEmptyString(password) ||\n      !regexp.test(email) ||\n      !regexp.test(password)\n    ) {\n      this.setState({ hasError: true });\n    } else {\n      this.setState({ showLoading: true });\n      this.props.authenticate(\n        this.state.email.trim(),\n        this.state.password.trim(),\n        (result) => {\n          console.log(result, \"resultresultresultresult\");\n          this.setState({ showLoading: false });\n          if (result) {\n            this.props.history.push(PATH.INDEX_PAGE);\n          } else {\n            this.setState({ showLoginError: true });\n          }\n        }\n      );\n    }\n  };\n\n  /**\n   * Renders login screen design\n   */\n  render() {\n    const {\n      email,\n      password,\n      hasError,\n      showLoginError,\n      showPassword,\n    } = this.state;\n    return (\n      <>\n        <h3>Login</h3>\n        <p className=\"text-muted\">\n          Login to your account using your credentials\n        </p>\n        <div className=\"form-group\">\n          <label>Email</label>\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              onChange={(e) => this.handleChange(e)}\n              value={email}\n            />\n          </div>\n          {hasError && (isEmptyString(email) || !regexp.test(email)) && (\n            <div>\n              <small className=\"text-danger\">Enter valid email.</small>\n            </div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label>Password</label>\n          <div className=\"input-group mb-3\">\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              className=\"form-control\"\n              placeholder=\"Enter password\"\n              name=\"password\"\n              onChange={(e) => this.handleChange(e)}\n              value={password}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") this.onClickLogin();\n              }}\n            />\n            <div\n              className=\"input-group-append\"\n              onClick={() =>\n                this.setState({ showPassword: !this.state.showPassword })\n              }\n            >\n              <span className=\"input-group-text bg-transparent\">\n                <i\n                  className={`fa ${showPassword ? \"fa-eye-slash\" : \"fa-eye\"}`}\n                />\n              </span>\n            </div>\n          </div>\n          {hasError && (isEmptyString(password) || !regexp.test(password)) && (\n            <div>\n              <small className=\"text-danger\">Enter valid password.</small>\n            </div>\n          )}\n        </div>\n        {showLoginError && (\n          <div>\n            <small className=\"text-danger\">Invalid email or password.</small>\n          </div>\n        )}\n        <div className=\"d-flex justify-content-between mt-4\">\n          <button\n            className=\"btn btn-dark px-4\"\n            onClick={() => this.onClickLogin()}\n            disabled={this.state.showLoading}\n          >\n            Login\n            {/* {this.state.showLoading && <Spinner size='sm' className='ml-2 m-1' />} */}\n          </button>\n          <FacebookButton />\n          {/* <Link to={PATH.FORGET_PASSWORD} className='align-self-center'>\n\t\t\t\t\t\t\t<small>Forgot Password?</small>\n\t\t\t\t\t\t</Link> */}\n        </div>\n      </>\n    );\n  }\n}\n\n/**\n * Type of the props used in the component\n */\nLogin.propTypes = {\n  authenticate: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default connect(null, { authenticate })(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass RedirectAfterFBSignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"load\", function (event) {\n      window.close();\n    });\n  }\n\n  /**\n   * Renders login screen design\n   */\n  render() {\n    return (\n      <>\n        <h3>Redirect</h3>\n      </>\n    );\n  }\n}\n\n/**\n * Type of the props used in the component\n */\nRedirectAfterFBSignIn.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default connect(null, {})(RedirectAfterFBSignIn);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Wrapper = ({ children }) => {\n  return <div>{children}</div>;\n};\n\n/**\n * Type of the props used in the component\n */\nWrapper.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Wrapper from \"./Wrapper\";\nimport { connect } from \"react-redux\";\nimport { authenticate } from \"../../actions/loginInAction\";\nimport { PATH } from \"../../config/routes\";\nimport { logout } from \"../../utils/Utility\";\n// import { Link } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      showLoading: false,\n      hasError: false,\n      showLoginError: false,\n    };\n  }\n\n  /**\n   * Handles change\n   */\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  /**\n   * Handles onClick Logout\n   */\n  onClickLogout = () => {\n    logout();\n    this.props.history.push(PATH.LOGIN);\n  };\n\n  /**\n   * Renders login screen design\n   */\n  render() {\n    return (\n      <Wrapper>\n        <>\n          <h3>Dashboard</h3>\n          <button onClick={() => this.onClickLogout()}>logout</button>\n        </>\n      </Wrapper>\n    );\n  }\n}\n\n/**\n * Type of the props used in the component\n */\nDashboard.propTypes = {\n  authenticate: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default connect(null, { authenticate })(Dashboard);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { isLoggedIn } from \"../utils/Utility\";\nimport { PATH } from \"./../config/routes\";\nimport Login from \"./auth/Login\";\nimport RedirectAfterFBSignIn from \"./common/Redirect\";\nimport Dashboard from \"./dashboard\";\n\n/**\n * css\n */\nimport \"../assets/css/dev.css\";\n\n/**\n * Authenticated routes middleware\n * @param {*} Component\n */\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isLoggedIn() ? <Component {...props} /> : <Redirect to={PATH.LOGIN} />\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.object,\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <React.StrictMode>\n          <BrowserRouter>\n            <React.Fragment>\n              <Switch>\n                <Route path={PATH.LOGIN} exact component={Login} />\n                <Route\n                  path={PATH.REDIRECT}\n                  exact\n                  component={RedirectAfterFBSignIn}\n                />\n                <PrivateRoute\n                  path={PATH.INDEX_PAGE}\n                  exact\n                  component={Dashboard}\n                />\n              </Switch>\n            </React.Fragment>\n          </BrowserRouter>\n        </React.StrictMode>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { IS_DEVELOPMENT } from \"./config/index\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n/**\n * Creating Redux store for application\n */\nconst store = createStore(\n  reducers,\n  IS_DEVELOPMENT\n    ? composeEnhancers(applyMiddleware(reduxThunk))\n    : applyMiddleware(reduxThunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}